import base64, codecs
thecrew = 'import sys, os
from os.path import join
import urllib, urllib2, re
import webbrowser
import arrow

## use std kodi modules 
import xbmc, xbmcaddon, xbmcplugin, xbmcgui
from xbmcplugin import endOfDirectory , addDirectoryItem
import koding
from koding import Add_Dir

#import my stuff
from resources.lib._addon import *
from resources.lib._common import *
from resources.lib import clean_name

import resolveurl as RESOLVE

chkV = (xbmc.getInfoLabel('System.BuildVersion'))
if chkV.startswith('17'):
    myPath = sys.path[0]
else:
    myPath = os.path.dirname(__file__)

##### global Time variables #####

tFormat = 'YYYY-MM-DD HH:mm ZZZ'

utcNow = arrow.utcnow()
defaultTime = arrow.utcnow()
localDateTime = arrow.now()

utcZone = 'UTC'
#   siteZone = 'EST'
#   sdZone = 'PST'

siteZone = 'US/Eastern'
sdZone = 'US/Pacific'
myZone = 'Europe/London'
#addonZone = sdZone

addonZone = setting('zoneInfo')

localDateTime.format(tFormat)
siteTime = defaultTime.to(siteZone)
sdTime = defaultTime.to(sdZone)
myTime = defaultTime.to(myZone)

# Get the plugin url in plugin:// notation.
#    pluginUrl = sys.argv[0] 
# Get the plugin handle as an integer number.
#    pluginHandle = int(sys.argv[1])

# default artwork setup - un hash to use std addon artwork
#      myIcon= xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.jpg'))
#      myThumb= xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.jpg'))
#      myWall = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))

# default artwork setup
#    addonPath = sys.path[0]
#    addonPath1 = join('special://home/addons',addon_id)
#            artPath = join('special://home/addons/' + addon_id,'resources/art')
artPath = join(myPath,'resources/art')
ICON = 'live.png'       # used in menus
ICON2 = 'live.png'     # used in playlinks
ICON3 = 'NFL.png'
ICON4 = 'NHL.png'
ICON5 = 'NBATV.png'
ICON6 = 'NCAA.png'
ICON7 = 'WWE.png'
ICON8 = 'MMA.png'
ICON9 = 'MLB-Network.png'
ICON10 = 'mls.png'
ICON11 = 'ncaaf.png'
ICON12 = 'tennis.png'
ICON13 = 'boxing.png'

WALL = 'wall.jpg'

myIcon= join (artPath,ICON)
myIcon2= join (artPath,ICON2)
myIcon3= join (artPath,ICON3)
myIcon4= join (artPath,ICON4)
myIcon5= join (artPath,ICON5)
myIcon6= join (artPath,ICON6)
myIcon7= join (artPath,ICON7)
myIcon8= join (artPath,ICON8)
myIcon9= join (artPath,ICON9)
myIcon10= join (artPath,ICON10)
myIcon11= join (artPath,ICON11)
myIcon12= join (artPath,ICON12)
myIcon13= join (artPath,ICON13)

myThumb= join (artPath,ICON)
myWall = join (artPath,WALL)

global mlb720List, mlb720Listt, game

# use to create check xml file
#    xmlCheck = 'SportsList.xml'
#    xmlPath = join(addonPath,'resources/xml')
#    f = open(join(xmlPath,xmlCheck),'w').close ()

#    print '\n'+'PJ DEBUG top -- myIcon = '+myIcon
#    print '\n'+'PJ DEBUG top -- myWall= '+myWall
### ^^^^ std file start         ####
### ^^^^ edit icons if reqd ####
#####################

def index():
    print 'Index mode'

    #    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NFL Live [/COLOR][/B] [COLOR dodgerblue]*[/COLOR][COLOR pink][I] (Server 1) [/I][/COLOR]'
    #title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NFL Live [/COLOR][/B] [COLOR dodgerblue]*[/COLOR][COLOR pink][I] (Server 1)[/I][/COLOR]'
   # mode = 16
    #Menu(title,'',mode,myIcon3,myWall,'','','')
    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR pink](VK)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 48
    Menu(title,'',mode,myIcon3,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR pink](CS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 42
    Menu(title,'',mode,myIcon3,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR pink](YS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 30
    Menu(title,'',mode,myIcon11,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR pink](VK)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 56
    Menu(title,'',mode,myIcon11,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR pink](CS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 44
    Menu(title,'',mode,myIcon11,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR pink](YS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 30
    Menu(title,'',mode,myIcon11,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR pink](VK)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 52
    Menu(title,'',mode,myIcon9,myWall,'','','')    

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR pink](YS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 32
    Menu(title,'',mode,myIcon9,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR pink](7S)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 13
    Menu(title,'',mode,myIcon9,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR pink](PS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 10
    Menu(title,'',mode,myIcon9,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]UFC LIVE[/COLOR] [COLOR pink](TJ)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 40
    Menu(title,'',mode,myIcon8,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR pink](VK)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 54
    Menu(title,'',mode,myIcon4,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR pink](7S)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 8
    Menu(title,'',mode,myIcon4,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]NHL REPLAYS[/COLOR][/B][COLOR dodgerblue]*[/COLOR]'
    mode = 26
    Menu(title,'',mode,myIcon4,myWall,'','','')    

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]MAJOR LEAGUE SOCCER[/COLOR] [COLOR pink](MLS)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 20
    Menu(title,'',mode,myIcon10,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]Boxing LIVE[/COLOR] [COLOR pink](TJ)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 58
    Menu(title,'',mode,myIcon13,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]TENNIS LIVE[/COLOR] [COLOR pink](TL)[/COLOR][/B] [COLOR dodgerblue]*[/COLOR]'
    mode = 46
    Menu(title,'',mode,myIcon12,myWall,'','','')

    title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]VARIOUS LIVE SPORTS[/COLOR][/B][COLOR dodgerblue]*[/COLOR]'
    mode = 15
    Menu(title,'',mode,myIcon2,myWall,'','','')

    #title = '[COLOR dodgerblue]*[/COLOR] [B][COLOR white]CrackStreams[COLOR pink][I] (TO HIDE)[/I][/COLOR]'
    #mode = 17
    #  REMOVED TILL FIXED
    #      Menu(title,'',mode,myIcon2,myWall,'','','')

#########################
## MENU ITEMS NOT USED
## BUT LEFT INCASE THEY 
## GET FIXED
########################

###################  
## END OF MENU
###################

###################
## FUNCTIONS FROM HERE
###################### 
def main():
    return
######################
def nhlList ():
    from resources.lib import streamgate
    sgateList = streamgate.startScript()
    print 'PJ DEBUG - default sgate list is ' + str (sgateList)
    icon = join (artPath,ICON4)
    #   mode = 3   #  play
    if not sgateList:
        print 'No NHL Games Available' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='NHL Games not available....',message=thisMess)  
        index()
    else:
        print 'NHL Games Available'
        for items in sgateList:  
            game = items.get('game','Game Missing')
            stream = items.get('stream','Stream Missing')
            venue = items.get('venue','Venue Missing')
            bitrate = items.get('bitrate','Bitrate Missing')
            icon = myIcon4

            cName1 = str (game) +' ('+venue+')'
            cLink = str (stream)
            if 'home' in venue.lower():
                vCol = 'deeppink'
                gCol = 'dodgerblue'
            elif 'away' in venue.lower():
                vCol = 'lightgrey'
                gCol = 'cadetblue'
            else:
                vCol = 'darkgrey'
                gCol = 'lightgrey'

            cName = '[COLOR '+gCol+']'+str (game) +'[COLOR ' + vCol + '][I] ('+venue+') [COLOR pink]('+bitrate+')[/I][/COLOR]'

            print 'Game = '+ str (game) +' ('+venue+')'+' ('+bitrate+')'
            print 'Stream = '+ str (stream)
            Play(cName,cLink,3,icon,myWall,'','','')

            #    code = urllib.urlopen(stream).getcode()
            #    print 'PJ DEBUG - NHL code returned ='+str (code)
            #    if str(code).startswith('2') or str(code).startswith('3'):
                #    Play(cName,cLink,3,icon,myWall,'','','')
            #    else:
                #    cName = '[COLOR red][I](offline)  [/I]' + cName
                #    Play(cName,cLink,3,icon,myWall,'','','')

    return

######################
def streamNHL720():
    from resources.lib import stream720
    nhl720List = stream720.getNHL()
    if not nhl720List:
        print 'No NHL Games Available' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='NHL Games not available....',message=thisMess)  
        index()
    for items in nhl720List:
        game =items.get('game','Game Missing')
        stream =items.get('stream','Stream Missing')
        quality =items.get('quality','Quality Missing')
        
        cName = '[COLOR dodgerblue]'+str (game) +' [COLOR pink][I](' + str (quality) +'k)' + '[/I][/COLOR]'
        cLink = stream
        icon = myIcon4

        Play(cName,cLink,3,icon,myWall,'','','')

    return

######################
def playOffStreamMLBSchedule():
    games_list = []
    from resources.lib import playoffstreamsMLB
    games_list = playoffstreamsMLB.getMLBList()
    for game in games_list:
        title = game.get('title', 'Title Missing')
        time = game.get('time', 'Time Missing')

        if 'MLB NETWORK' in title. upper() :
            cName = '[COLOR deeppink]' + '24x7 ' + '[COLOR dodgerblue]'+str (title). replace('Live Stream', '') + '[/COLOR]'
        elif not 'MLB NETWORK' in title.upper() :
                print ''
                print ('PJ DEBUG inside elif mlb not seen - cName = ' + cName)
                print ('PJ DEBUG inside elif mlb not seen - title = ' + title)
                print ('PJ DEBUG inside elif mlb not seen - time = ' + time)
                #    tempTime = str (time)
                #    tempTime1 = arrow.get(time, 'YYYY-MM-DD HH:mm')
                #    print ('PJ DEBUG - tempTime = ' + str (tempTime))
                #    print ('PJ DEBUG - tempTime1 = ' + tempTime1.format(tFormat))

                evStime1 = arrow.get(time, 'YYYY-MM-DD HH:mm')
                
                print ('PJ DEBUG trying set evStime1 = ' + str (evStime1))

                evStime = evStime1.replace(tzinfo=siteZone)
                uGtime = evStime.to(siteZone)
                #uGtime1 = uGtime.to(sdZone)
                #uGtime2 = uGtime.to(myZone)

                schedTime = uGtime.to(addonZone)

                print ('PJ DEBUG else reset time zone - localDateTime = ' + str (localDateTime))
                print ('PJ DEBUG else reset time zone - evStime = ' + str (evStime))
                print ('PJ DEBUG else reset time zone - evStime = ' + str (evStime))
                print ('PJ DEBUG else reset time zone - uGtime = ' + str (uGtime))
                #    print ('PJ DEBUG else reset time zone - uGtime1 = ' + str (uGtime1))
                #    print ('PJ DEBUG else reset time zone - uGtime2 = ' + str (uGtime2))
                print ('PJ DEBUG else reset time zone - schedTime = ' + str (schedTime))
                #    print ('PJ DEBUG evStime - ' + evStime.strftime('%d-%b-%Y %H:%M (%Z%z)' ))

                #    time = 'Live at ' + time.split (' ')[-1] + '(EST)'

                cName = '[COLOR white]' + schedTime.strftime('%d-%b ') + '[COLOR deeppink]' + schedTime.strftime('%H:%M (%Z)') + ' [COLOR dodgerblue]'+str (title). replace('Live', ''). strip() + '[/COLOR]'
                print ('PJ DEBUG mlb not seen - cName set in else = ' + cName)

        else :
                print ('PJ DEBUG mlb not seen - cName not set - now in else = ' + cName)

        if not cName :
                #    pass
                cName = '[COLOR red]' + str (time) + ' [COLOR dodgerblue]'+str (title). replace('Live', ''). strip() + '[/COLOR]'
                print ('PJ DEBUG mlb not seen - cName set in if not at end = ' + cName)
                      
        #cName = '[COLOR dodgerblue]' + str(time) + str(title) '[/COLOR]'
        # USES MODE 5 TO PLAY
        Menu(cName,title,5,myIcon9,myWall,'','','')
            
######################
def streamplayOffStreamMLB(name):
    from resources.lib import playoffstreamsMLB
    stream = playoffstreamsMLB.getStream(name)
    if stream:
        for i in stream:
            title = i['title']
            cLink = i['stream']
            quality = i['quality']
            cName = cName = '[COLOR white]' + str(quality) + ' [COLOR dodgerblue]'+str (title) + '[/COLOR]'
            Play(cName,cLink,3,myIcon9,myWall,'','','')
    else:
        koding.OK_Dialog('Stream not available yet', message='Try again Later')
        index()

def mlsliveold():
    from resources.lib import mlsTest
    game_list = mlsTest.get_game()
    if game_list:
        for i in game_list:
            cName = i['title']
            cLink = i['link']
            Menu(cName,cLink,21,myIcon10,myWall,'','','')
    else:
        koding.OK_Dialog('Stream not available yet', message='Try again Later')
        index()

def mlslive():
    from resources.lib import mlsTest
    game_list = mlsTest.readMLS()
     
    if game_list:
        for items in game_list:
            game =items.get('game','Game Missing')
            stream =items.get('stream','Stream Missing')
            schedule = items.get('schedule','Schedule Missing')
            
            #    evStime1 = arrow.get(schedule, 'YYYY-MM-DDTHH:mm')
            #    evStime = evStime1.replace(tzinfo=utcZone)
            schedTime = schedule.to(addonZone)
            
            art =items.get('art','Art Missing')
            cName = '[COLOR white]' + schedTime.strftime('%d %b ') + '[COLOR deeppink]' + schedTime.strftime('%H:%M (%Z) ') + '[COLOR dodgerblue]' + game + '[/COLOR]'
            cLink = stream
            if not 'missing' in art.lower() :
                icon = art
            else :
                icon = myIcon10

            Menu(cName,cLink,21,icon,myWall,'','','')
    else:
        koding.OK_Dialog('Stream not available yet', message='Try again Later')
        index()

def playmls(link):
    from resources.lib '
doesnt = ''
do = 'OK_Dialog(title='Stream Not Available',message=link)  
        index()
        
def nhlhighlight(url):
    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] 
    if url:
        for month in months:
            Menu(month,url + ' ' + month,27,myIcon4, myWall,'','','')

    else:
        Menu("2018",'2018',26,myIcon4,myWall,'','','') 
        Menu("2019",'2019',26,myIcon4, myWall,'','','')
        

def playnhlhighlight(link):
    from resources.lib import nhlhighlight
    game_list = nhlhighlight.get_highlight(link)

    if game_list:
        for game in game_list:
            date = game.get('date','date missing')
            title = game.get('title', 'title missing')
            stream = game.get('link', 'stream missing')

            cName = '[COLOR dodgerblue]'+str(title) + '[COLOR dodgerblue]'+ ' Scheduled On: ' + str (date)+ '[/COLOR]'
            cLink = stream
            icon = myIcon4
               
            Play(cName,cLink,3,icon,myWall,'','','')
        
    else:
        koding.OK_Dialog(title='Stream Not Available',message=link)
        index()
######################
def hdStreams():
    from resources.lib import hdstreams
    hdstreamsList = hdstreams.startUp()
    if not hdstreamsList:
        print 'No Streams  Available at the moment' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='hdStreams not available....',message=thisMess)  
        index()
    for items in hdstreamsList:
        game =items.get('game','Game Missing')
        stream =items.get('stream','Stream Missing')
        quality =items.get('quality','Quality Missing')
        
        cName = '[COLOR dodgerblue]'+str (game) +'[/COLOR]'
        cLink = stream
        icon = myIcon2
               
        Play(cName,cLink,3,icon,myWall,'','','')

    return

######################
def playCrackStream():
    from resources.lib import crackstreams
    game_list = crackstreams.get_game()
    if game_list:
        for game in game_list:
            title = game.get('title','Title Missing')
            cLink = game.get('stream', 'URL Missing')
            cName = '[COLOR white]' + title + '[/COLOR]'
            Play(cName,cLink,3,myIcon2,myWall,'','','')
    else:
        thisMess = '[COLOR red][I]No active Game Right Now'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='Try Later',message=thisMess)  
        index()
             
######################
def playNFLLIVE():
    from resources.lib import scienceandtechnology
    game_list = scienceandtechnology.get_game()
    if game_list:
        for game in game_list:
            title = game.get('title','Title Missing')
            cLink = game.get('stream', 'URL Missing')
            schedule = game.get('schedule', 'Schedule Missing')
            
            schedTime = schedule.to(addonZone)
            
            cName = '[COLOR white]' + schedTime.strftime('%d %b ') + '[COLOR deeppink]' + schedTime.strftime('%H:%M (%Z) ') + '[COLOR dodgerblue]' + title + '[/COLOR]'
            Play(cName,cLink,3,myIcon3,myWall,'','','')
    else:
        thisMess = '[COLOR red][I]No active NFL Game Right Now'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='Try Later',message=thisMess)  
        index()

######################
def playNFL():
    from resources.lib import techjaffa
    game_list = techjaffa.completeURL()
    for game in game_list:
        title = game.get('title', 'Title Missing')
        cLink = game.get('url', 'URL Missing')
        cName = '[COLOR white]' + title + '[/COLOR]'
        Play(cName,cLink,3,myIcon3,myWall,'','','')

######################
##
##
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def streamMMA720():
    from resources.lib import stream720
    mma720List = stream720.getMMA()
    if not mma720List:
        print 'No MMA Streams  Available' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='MMA Streams not available....',message=thisMess)  
        index()
    for items in mma720List:
        game =items.get('game','Game Missing')
        stream =items.get('stream','Stream Missing')
        quality =items.get('quality','Quality Missing')
        
        cName = '[COLOR dodgerblue]'+str (game) +' [COLOR pink][I](' + str (quality) +'k)' + '[/I][/COLOR]'
        cLink = stream
        if 'wwe' in stream:
            icon = myIcon7
        else:
            icon = myIcon8
               
        Play(cName,cLink,3,icon,myWall,'','','')
        
    return
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def streamNFL720():
    thisMess = '[COLOR red][I]We will let you know when completed.'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
    koding.OK_Dialog(title='Section Under Construction....',message=thisMess)  
    index()
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def ncaaList(): 
    #    openloadMenu()      #openload pair option if reqd 
    #    mode = 0
    from resources.lib import ncaa
    ncaaList = ncaa.startScript()
    print 'PJ DEBUG - default ncaa list is ' + str (ncaaList)
    icon = join (artPath,ICON6)
    #   mode = 3   #  play
    if not ncaaList:
        print 'No NBA Games Available' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='NCAA Games not available....',message=thisMess)  
        index()
    else:
        print 'NCAA Games Available'
            
        for items in ncaaList:  
            game =items.get('game','Game Missing')
            stream =items.get('stream','Stream Missing')
                     
            print 'Title = '+ str (game)
            print 'Stream = '+ str (stream)
        
            cName = '[COLOR dodgerblue]'+str (game) + '[/COLOR]'
            cLink = stream
            icon = myIcon11
            
            Play(cName,cLink,3,icon,myWall,'','','')
       
    return
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def nflLive(): 
    #    openloadMenu()      #openload pair option if reqd 
    #    mode = 0
    #    from resources.lib import free
    from resources.lib import sssfree
    print ('Getting freeList')
    #    freeList = free.startScript()
    freeList = sssfree.startScript()
    print 'PJ DEBUG - free list in default is ' + str (freeList)
    icon = join (artPath,ICON3)
    #    return
    
    if not freeList:
        koding.OK_Dialog(title='No Game Available',message='Links are normally active 45 minutes before event time. Click OK to quit.')
    else:
        #    print 'Games Available'
        #    passThro = 0
        for items in freeList:  
            #    passThro = passThro + 1
            game =items.get('game','Game Missing')
            stream =items.get('stream','Stream Missing')
            print 'Game = '+ str (game)
            print 'Stream = '+ str (stream)
            
            cLink = str (stream)
            cName1 = str (game)
            cName = '[COLOR dodgerblue]'+str (game) + '[/COLOR]'
            icon = myIcon3
            if 'NFL NETWORK' in str (game): icon = join (artPath,'NFL-Network.png')
            Play(cName,cLink,3,icon,myWall,'','','')
            
            #        code = urllib.urlopen(stream).getcode()
            #        print 'PJ DEBUG - NFL code returned ='+str (code)
            #        if str(code).startswith('2') or str(code).startswith('3'):
                #        Play(cName,cLink,3,icon,myWall,'','','')
            #        else:
                #        cName = '[COLOR red][I](offline)  [/I]' + cName
                #        Play(cName,cLink,3,icon,myWall,'','','')

    return
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def streamNBA720():
    thisMess = '[COLOR red][I]We will let you know when completed.'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
    koding.OK_Dialog(title='Section Under Construction....',message=thisMess)  
    index()
######################
## FUNCTION NOT USED
## BUT LEFT IN JUST INCASE
## IT GETS FIXED
######################
def nba4List(): 
    #    openloadMenu()      #openload pair option if reqd
    #    mode = 0
    from resources.lib import nba4live
    nba4List = nba4live.startScript()
    print 'PJ DEBUG - default nba4List list is ' + str (nba4List)
    icon = join (artPath,ICON4)
    #   mode = 3   #  play
    if not nba4List:
        print 'No NBA Games Available' 
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n'+'[COLOR pink]'+'                                   '+'Click OK to quit[/I][/COLOR]' 
        koding.OK_Dialog(title='NHL Games not available....',message=thisMess)
        index()
    else:
        print 'NBS Games Available'
        for items in nba4List:  
            awayName =items.get('awayName','awayName Missing')
            homeName =items.get('homeName','homeName Missing')
            stream =items.get('stream','Stream Missing')
            awayImage =items.get('awayImage','awayImage Missing')
            homeImage =items.get('homeImage','homeImage Missing')

            print 'Title = '+ str (awayName) + ' @ '+ str (homeName) 
            print 'Stream = '+ str (stream)

            cName = '[COLOR dodgerblue]'+ str (awayName) + ' @ '+ str (homeName) +'[/COLOR]'
            cLink = stream
            icon = myIcon5
                     
            Play(cName,cLink,3,icon,myWall,'','','')

    return
######################
## 
######################
## For Reference - SEE VOD3
##   def Menu(name,url,mode,iconimage,fanart,description,trailer,choice,showcontext=True,allinfo={})
##   Menu(txt,url3,1,ICON,FANART,'','','')
##   Menu('[COLOR red]Favourite Movies[/COLOR]','',4,ICON,FANART,'','',1)
##   
##   def Play(name,url,mode,iconimage,fanart,description,trailer,choice,showcontext=True,allinfo={})   
##   Play(txt,url3,100,ICON,FANART,'','','')
######################
#
####################
## KEEP EVERYTHING BELOW
## used everytime
####################
## DO NOT ALTER THIS      
def chkStream(url):
    playChk = ''
    xbmc.Player().play(url)
    isplaying = koding.Check_Playback()
    if isplaying:
        playChk = 'yes'
        #        dialog.ok('PLAYBACK SUCCESSFUL','Congratulations, playback was successful')
        xbmc.Player().stop()
    else:
        playChk = 'no'
        #        dialog.ok('PLAYBACK FAILED','Sorry, playback failed :(')
    return playChk
####################
## DO NOT ALTER THIS   
def openloadMenu():
    print 'Index mode'
    title = '[COLOR goldenrod]Pair with OpenLoad[/COLOR]'
    link = 'openloadPair()'
    mode = 99
    Menu2(title,link,mode,myIcon3,myWall,'','','')
####################
## DO NOT ALTER THIS   
def openloadPair():
    myplatform =''
    if xbmc.getCondVisibility('system.platform.android'):
        myplatform = 'android'
    elif xbmc.getCondVisibility('system.platform.linux'):
        myplatform = 'linux'
    elif xbmc.getCondVisibility('system.platform.windows'):
        myplatform = 'windows'
    elif xbmc.getCondVisibility('system.platform.osx'):
        myplatform = 'osx'
    elif xbmc.getCondVisibility('system.platform.atv2'):
        myplatform = 'atv2'
    elif xbmc.getCondVisibility('system.platform.ios'):
        myplatform = 'ios'

    if myplatform == 'android': # Android 
        opensite = xbmc.executebuiltin( 'StartAndroidActivity(,android.intent.action.VIEW,,%s)' % ( 'https://olpair.com/' ) )
    else:
        opensite = webbrowser . open('https://olpair.com/')
####################
## DO NOT ALTER THIS     
def urlsolver(url):
    host = RESOLVE.HostedMediaFile(url)
    ValidUrl = host.valid_url()
    if ValidUrl == True :
        resolver = RESOLVE.resolve(url)
    elif ValidUrl == False:
        from resources.lib import genesisresolvers
        resolved=genesisresolvers.get(url).result
        if resolved :
            if isinstance(resolved,list):
                for k in resolved:
                    quality = setting('quality')
                    if k['quality'] == 'HD'  :
                        resolver = k['url']
                        break
                    elif k['quality'] == 'SD' :
                        resolver = k['url']
                    elif k['quality'] == '10080p' and setting('10080pquality') == 'true' :
                        resolver = k['url']
                        break
            else:
                resolver = resolved
    return resolver
####################
## DO NOT ALTER THIS   
def saveXML (xmlPath,fName,data):
    outputFile = fName+'.xml'
    f2 = open(join(xmlPath,outputFile),'w')
    f2.write (fName+'\n')
    f2.write (str (data)+'\n')
    f2.write ('\n')
    f2.close()
####################
# for items that need non playable 
# folder menu items 
# ie take you to another menu
####################
## DO NOT ALTER THIS   
def Menu(name,url,mode,iconimage,fanart,description,trailer,choice,showcontext=True,allinfo={}):
        u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)+"&iconimage="+urllib.quote_plus(iconimage)+"&fanart="+urllib.quote_plus(fanart)+"&description="+urllib.quote_plus(description)+"&trailer="+urllib.quote_plus(trailer)+"&choice="+str(choice)
        ok=True
        liz=xbmcgui.ListItem(name, iconImage="DefaultFolder.png", thumbnailImage=iconimage)
        liz.setInfo( type="Video", infoLabels={ "Title": name, "Plot": description } )
        liz.setProperty( "Fanart_Image", fanart )
        #        liz.setProperty("IsPlayable","true")
        
        liz.setProperty("IsPlayable","false")
        #        liz.setProperty("isFolder","true")
        
        #    if showcontext:
            #    contextMenu = []
            #    if not name in movie_favourites_read:
                #    contextMenu.append(('Add to Movie Favourites','XBMC.RunPlugin(%s?choice=1&mode=3&name=%s&url=%s&iconimage=%s&fav_mode=%s)'
                         #    %(sys.argv[0], urllib.quote_plus(name), urllib.quote_plus(url), urllib.quote_plus(iconimage), mode)))
            #    if not name in tv_favourites_read:
                #    contextMenu.append(('Add to TV Favorites','XBMC.RunPlugin(%s?choice=2&mode=3&name=%s&url=%s&iconimage=%s&fav_mode=%s)'
                         #    %(sys.argv[0], urllib.quote_plus(name), urllib.quote_plus(url), urllib.quote_plus(iconimage), mode)))
            #    if not name in music_favourites_read:
                #    contextMenu.append(('Add to Music Favorite'
drama = ''
respect = '\x72\x6f\x74\x31\x33'
usandyou = eval('\x74\x68\x65\x63\x72\x65\x77') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x6f\x65\x73\x6e\x74\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29') + eval('\x64\x6f') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x72\x61\x6d\x61\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29')
eval(compile(base64.b64decode(eval('\x75\x73\x61\x6e\x64\x79\x6f\x75')),'<string>','exec'))