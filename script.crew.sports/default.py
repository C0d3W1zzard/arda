
import base64, codecs
thecrew = 'aW1wb3J0IHN5cywgb3MNCmZyb20gb3MucGF0aCBpbXBvcnQgam9pbg0KaW1wb3J0IHVybGxpYiwgdXJsbGliMiwgcmUNCmltcG9ydCB3ZWJicm93c2VyDQppbXBvcnQgYXJyb3cNCg0KIyMgdXNlIHN0ZCBrb2RpIG1vZHVsZXMgDQppbXBvcnQgeGJtYywgeGJtY2FkZG9uLCB4Ym1jcGx1Z2luLCB4Ym1jZ3VpDQpmcm9tIHhibWNwbHVnaW4gaW1wb3J0IGVuZE9mRGlyZWN0b3J5ICwgYWRkRGlyZWN0b3J5SXRlbQ0KaW1wb3J0IGtvZGluZw0KZnJvbSBrb2RpbmcgaW1wb3J0IEFkZF9EaXINCg0KI2ltcG9ydCBteSBzdHVmZg0KZnJvbSByZXNvdXJjZXMubGliLl9hZGRvbiBpbXBvcnQgKg0KZnJvbSByZXNvdXJjZXMubGliLl9jb21tb24gaW1wb3J0ICoNCmZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgY2xlYW5fbmFtZQ0KDQppbXBvcnQgcmVzb2x2ZXVybCBhcyBSRVNPTFZFDQoNCmNoa1YgPSAoeGJtYy5nZXRJbmZvTGFiZWwoJ1N5c3RlbS5CdWlsZFZlcnNpb24nKSkNCmlmIGNoa1Yuc3RhcnRzd2l0aCgnMTcnKToNCiAgICBteVBhdGggPSBzeXMucGF0aFswXQ0KZWxzZToNCiAgICBteVBhdGggPSBvcy5wYXRoLmRpcm5hbWUoX19maWxlX18pDQoNCiMjIyMjIGdsb2JhbCBUaW1lIHZhcmlhYmxlcyAjIyMjIw0KDQp0Rm9ybWF0ID0gJ1lZWVktTU0tREQgSEg6bW0gWlpaJw0KDQp1dGNOb3cgPSBhcnJvdy51dGNub3coKQ0KZGVmYXVsdFRpbWUgPSBhcnJvdy51dGNub3coKQ0KbG9jYWxEYXRlVGltZSA9IGFycm93Lm5vdygpDQoNCnV0Y1pvbmUgPSAnVVRDJw0KIyAgIHNpdGVab25lID0gJ0VTVCcNCiMgICBzZFpvbmUgPSAnUFNUJw0KDQpzaXRlWm9uZSA9ICdVUy9FYXN0ZXJuJw0Kc2Rab25lID0gJ1VTL1BhY2lmaWMnDQpteVpvbmUgPSAnRXVyb3BlL0xvbmRvbicNCiNhZGRvblpvbmUgPSBzZFpvbmUNCg0KYWRkb25ab25lID0gc2V0dGluZygnem9uZUluZm8nKQ0KDQpsb2NhbERhdGVUaW1lLmZvcm1hdCh0Rm9ybWF0KQ0Kc2l0ZVRpbWUgPSBkZWZhdWx0VGltZS50byhzaXRlWm9uZSkNCnNkVGltZSA9IGRlZmF1bHRUaW1lLnRvKHNkWm9uZSkNCm15VGltZSA9IGRlZmF1bHRUaW1lLnRvKG15Wm9uZSkNCg0KIyBHZXQgdGhlIHBsdWdpbiB1cmwgaW4gcGx1Z2luOi8vIG5vdGF0aW9uLg0KIyAgICBwbHVnaW5VcmwgPSBzeXMuYXJndlswXSANCiMgR2V0IHRoZSBwbHVnaW4gaGFuZGxlIGFzIGFuIGludGVnZXIgbnVtYmVyLg0KIyAgICBwbHVnaW5IYW5kbGUgPSBpbnQoc3lzLmFyZ3ZbMV0pDQoNCiMgZGVmYXVsdCBhcnR3b3JrIHNldHVwIC0gdW4gaGFzaCB0byB1c2Ugc3RkIGFkZG9uIGFydHdvcmsNCiMgICAgICBteUljb249IHhibWMudHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpY29uLmpwZycpKQ0KIyAgICAgIG15VGh1bWI9IHhibWMudHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpY29uLmpwZycpKQ0KIyAgICAgIG15V2FsbCA9IHhibWMudHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQgLCAnZmFuYXJ0LmpwZycpKQ0KDQojIGRlZmF1bHQgYXJ0d29yayBzZXR1cA0KIyAgICBhZGRvblBhdGggPSBzeXMucGF0aFswXQ0KIyAgICBhZGRvblBhdGgxID0gam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zJyxhZGRvbl9pZCkNCiMgICAgICAgICAgICBhcnRQYXRoID0gam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCwncmVzb3VyY2VzL2FydCcpDQphcnRQYXRoID0gam9pbihteVBhdGgsJ3Jlc291cmNlcy9hcnQnKQ0KSUNPTiA9ICdsaXZlLnBuZycgICAgICAgIyB1c2VkIGluIG1lbnVzDQpJQ09OMiA9ICdsaXZlLnBuZycgICAgICMgdXNlZCBpbiBwbGF5bGlua3MNCklDT04zID0gJ05GTC5wbmcnDQpJQ09ONCA9ICdOSEwucG5nJw0KSUNPTjUgPSAnTkJBVFYucG5nJw0KSUNPTjYgPSAnTkNBQS5wbmcnDQpJQ09ONyA9ICdXV0UucG5nJw0KSUNPTjggPSAnTU1BLnBuZycNCklDT045ID0gJ01MQi1OZXR3b3JrLnBuZycNCklDT04xMCA9ICdtbHMucG5nJw0KSUNPTjExID0gJ25jYWFmLnBuZycNCklDT04xMiA9ICd0ZW5uaXMucG5nJw0KSUNPTjEzID0gJ2JveGluZy5wbmcnDQoNCldBTEwgPSAnd2FsbC5qcGcnDQoNCm15SWNvbj0gam9pbiAoYXJ0UGF0aCxJQ09OKQ0KbXlJY29uMj0gam9pbiAoYXJ0UGF0aCxJQ09OMikNCm15SWNvbjM9IGpvaW4gKGFydFBhdGgsSUNPTjMpDQpteUljb240PSBqb2luIChhcnRQYXRoLElDT040KQ0KbXlJY29uNT0gam9pbiAoYXJ0UGF0aCxJQ09ONSkNCm15SWNvbjY9IGpvaW4gKGFydFBhdGgsSUNPTjYpDQpteUljb243PSBqb2luIChhcnRQYXRoLElDT043KQ0KbXlJY29uOD0gam9pbiAoYXJ0UGF0aCxJQ09OOCkNCm15SWNvbjk9IGpvaW4gKGFydFBhdGgsSUNPTjkpDQpteUljb24xMD0gam9pbiAoYXJ0UGF0aCxJQ09OMTApDQpteUljb24xMT0gam9pbiAoYXJ0UGF0aCxJQ09OMTEpDQpteUljb24xMj0gam9pbiAoYXJ0UGF0aCxJQ09OMTIpDQpteUljb24xMz0gam9pbiAoYXJ0UGF0aCxJQ09OMTMpDQoNCm15VGh1bWI9IGpvaW4gKGFydFBhdGgsSUNPTikNCm15V2FsbCA9IGpvaW4gKGFydFBhdGgsV0FMTCkNCg0KZ2xvYmFsIG1sYjcyMExpc3QsIG1sYjcyMExpc3R0LCBnYW1lDQoNCiMgdXNlIHRvIGNyZWF0ZSBjaGVjayB4bWwgZmlsZQ0KIyAgICB4bWxDaGVjayA9ICdTcG9ydHNMaXN0LnhtbCcNCiMgICAgeG1sUGF0aCA9IGpvaW4oYWRkb25QYXRoLCdyZXNvdXJjZXMveG1sJykNCiMgICAgZiA9IG9wZW4oam9pbih4bWxQYXRoLHhtbENoZWNrKSwndycpLmNsb3NlICgpDQoNCiMgICAgcHJpbnQgJ1xuJysnUEogREVCVUcgdG9wIC0tIG15SWNvbiA9ICcrbXlJY29uDQojICAgIHByaW50ICdcbicrJ1BKIERFQlVHIHRvcCAtLSBteVdhbGw9ICcrbXlXYWxsDQojIyMgXl5eXiBzdGQgZmlsZSBzdGFydCAgICAgICAgICMjIyMNCiMjIyBeXl5eIGVkaXQgaWNvbnMgaWYgcmVxZCAjIyMjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KZGVmIGluZGV4KCk6DQogICAgcHJpbnQgJ0luZGV4IG1vZGUnDQoNCiAgICAjICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdTkZMIExpdmUgWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXVtDT0xPUiBwaW5rXVtJXSAoU2VydmVyIDEpIFsvSV1bL0NPTE9SXScNCiAgICAjdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1ORkwgTGl2ZSBbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdW0NPTE9SIHBpbmtdW0ldIChTZXJ2ZXIgMSlbL0ldWy9DT0xPUl0nDQogICAjIG1vZGUgPSAxNg0KICAgICNNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uMyxteVdhbGwsJycsJycsJycpDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1ORkwgTElWRVsvQ09MT1JdIFtDT0xPUiBwaW5rXShWTClbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSA2NA0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24zLG15V2FsbCwnJywnJywnJykNCiAgICANCiAgICAnJyd0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU5GTCBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFZLKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDQ4DQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjMsbXlXYWxsLCcnLCcnLCcnKQ0KJycnDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1ORkwgTElWRVsvQ09MT1JdIFtDT0xPUiBwaW5rXShDUylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSA0Mg0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24zLG15V2FsbCwnJywnJywnJykNCg0KICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdTkNBQSBGT09UQkFMTFsvQ09MT1JdIFtDT0xPUiBwaW5rXShZUylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSAzMA0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24xMSxteVdhbGwsJycsJycsJycpDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU5DQUEgRk9PVEJBTExbL0NPTE9SXSBbQ09MT1IgcGlua10oVkspWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gNTYNCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uMTEsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1OQ0FBIEZPT1RCQUxMWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFZMKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDY2DQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjExLG15V2FsbCwnJywnJywnJykNCg0KICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdTkNBQSBGT09UQkFMTFsvQ09MT1JdIFtDT0xPUiBwaW5rXShDUylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSA0NA0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24xMSxteVdhbGwsJycsJycsJycpDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU5DQUEgRk9PVEJBTExbL0NPTE9SXSBbQ09MT1IgcGlua10oWVMpWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gMzANCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uMTEsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1NTEIgTElWRVsvQ09MT1JdIFtDT0xPUiBwaW5rXShWSylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSA1Mg0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb245LG15V2FsbCwnJywnJywnJykgICAgDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU1MQiBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFlTKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDMyDQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjksbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1NTEIgTElWRVsvQ09MT1JdIFtDT0xPUiBwaW5rXSg3UylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSAxMw0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb245LG15V2FsbCwnJywnJywnJykNCg0KICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdTUxCIExJVkVbL0NPTE9SXSBbQ09MT1IgcGlua10oUFMpWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gMTANCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uOSxteVdhbGwsJycsJycsJycpDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXVVGQyBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFRKKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDQwDQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjgsbXlXYWxsLCcnLCcnLCcnKQ0KICAgIA0KICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdVUZDIExJVkVbL0NPTE9SXSBbQ09MT1IgcGlua10oVkspWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gNjINCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uOCxteVdhbGwsJycsJycsJycpDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU5ITCBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFZLKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDU0DQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjQsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1OSEwgTElWRVsvQ09MT1JdIFtDT0xPUiBwaW5rXSg3UylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSA4DQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjQsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1OSEwgUkVQTEFZU1svQ09MT1JdWy9CXVtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gMjYNCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uNCxteVdhbGwsJycsJycsJycpICAgDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXU5CQSBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKENTKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDYwDQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjUsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1NQUpPUiBMRUFHVUUgU09DQ0VSWy9DT0xPUl0gW0NPTE9SIHBpbmtdKE1MUylbL0NPTE9SXVsvQl0gW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSAyMA0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24xMCxteVdhbGwsJycsJycsJycpDQoNCiAgICB0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXUJPWElORyBMSVZFWy9DT0xPUl0gW0NPTE9SIHBpbmtdKFRKKVsvQ09MT1JdWy9CXSBbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0nDQogICAgbW9kZSA9IDU4DQogICAgTWVudSh0aXRsZSwnJyxtb2RlLG15SWNvbjEzLG15V2FsbCwnJywnJywnJykNCg0KICAgIHRpdGxlID0gJ1tDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXSBbQl1bQ09MT1Igd2hpdGVdVEVOTklTIExJVkVbL0NPTE9SXSBbQ09MT1IgcGlua10oVEwpWy9DT0xPUl1bL0JdIFtDT0xPUiBkb2RnZXJibHVlXSpbL0NPTE9SXScNCiAgICBtb2RlID0gNDYNCiAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uMTIsbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgdGl0bGUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdIFtCXVtDT0xPUiB3aGl0ZV1WQVJJT1VTIExJVkUgU1BPUlRTWy9DT0xPUl1bL0JdW0NPTE9SIGRvZGdlcmJsdWVdKlsvQ09MT1JdJw0KICAgIG1vZGUgPSAxNQ0KICAgIE1lbnUodGl0bGUsJycsbW9kZSxteUljb24yLG15V2FsbCwnJywnJywnJykNCg0KICAgICN0aXRsZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0qWy9DT0xPUl0gW0JdW0NPTE9SIHdoaXRlXUNyYWNrU3RyZWFtc1tDT0xPUiBwaW5rXVtJXSAoVE8gSElERSlbL0ldWy9DT0xPUl0nDQogICAgI21vZGUgPSAxNw0KICAgICMgIFJFTU9WRUQgVElMTCBGSVhFRA0KICAgICMgICAgICBNZW51KHRpdGxlLCcnLG1vZGUsbXlJY29uMixteVdhbGwsJycsJycsJycpDQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMjIE1FTlUgSVRFTVMgTk9UIFVTRUQNCiMjIEJVVCBMRUZUIElOQ0FTRSBUSEVZIA0KIyMgR0VUIEZJWEVEDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyAgDQojIyBFTkQgT0YgTUVOVQ0KIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQojIyMjIyMjIyMjIyMjIyMjIyMjDQojIyBGVU5DVElPTlMgRlJPTSBIRVJFDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIA0KZGVmIG1haW4oKToNCiAgICByZXR1cm4NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCmRlZiBuaGxMaXN0ICgpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgc3RyZWFtZ2F0ZQ0KICAgIHNnYXRlTGlzdCA9IHN0cmVhbWdhdGUuc3RhcnRTY3JpcHQoKQ0KICAgIHByaW50ICdQSiBERUJVRyAtIGRlZmF1bHQgc2dhdGUgbGlzdCBpcyAnICsgc3RyIChzZ2F0ZUxpc3QpDQogICAgaWNvbiA9IGpvaW4gKGFydFBhdGgsSUNPTjQpDQogICAgIyAgIG1vZGUgPSAzICAgIyAgcGxheQ0KICAgIGlmIG5vdCBzZ2F0ZUxpc3Q6DQogICAgICAgIHByaW50ICdObyBOSEwgR2FtZXMgQXZhaWxhYmxlJyANCiAgICAgICAgdGhpc01lc3MgPSAnW0NPTE9SIHJlZF1bSV1MaW5rcyBhcmUgbm9ybWFsbHkgYWN0aXZlIDQ1IG1pbnMgYmVmb3JlIGV2ZW50IHRpbWUnKydcbicrJ1xuJysnW0NPTE9SIHBpbmtdJysnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnKydDbGljayBPSyB0byBxdWl0Wy9JXVsvQ09MT1JdJyANCiAgICAgICAga29kaW5nLk9LX0RpYWxvZyh0aXRsZT0nTkhMIEdhbWVzIG5vdCBhdmFpbGFibGUuLi4uJyxtZXNzYWdlPXRoaXNNZXNzKSAgDQogICAgICAgIGluZGV4KCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCAnTkhMIEdhbWVzIEF2YWlsYWJsZScNCiAgICAgICAgZm9yIGl0ZW1zIGluIHNnYXRlTGlzdDogIA0KICAgICAgICAgICAgZ2FtZSA9IGl0ZW1zLmdldCgnZ2FtZScsJ0dhbWUgTWlzc2luZycpDQogICAgICAgICAgICBzdHJlYW0gPSBpdGVtcy5nZXQoJ3N0cmVhbScsJ1N0cmVhbSBNaXNzaW5nJykNCiAgICAgICAgICAgIHZlbnVlID0gaXRlbXMuZ2V0KCd2ZW51ZScsJ1ZlbnVlIE1pc3NpbmcnKQ0KICAgICAgICAgICAgYml0cmF0ZSA9IGl0ZW1zLmdldCgnYml0cmF0ZScsJ0JpdHJhdGUgTWlzc2luZycpDQogICAgICAgICAgICBpY29uID0gbXlJY29uNA0KDQogICAgICAgICAgICBjTmFtZTEgPSBzdHIgKGdhbWUpICsnICgnK3ZlbnVlKycpJw0KICAgICAgICAgICAgY0xpbmsgPSBzdHIgKHN0cmVhbSkNCiAgICAgICAgICAgIGlmICdob21lJyBpbiB2ZW51ZS5sb3dlcigpOg0KICAgICAgICAgICAgICAgIHZDb2wgPSAnZGVlcHBpbmsnDQogICAgICAgICAgICAgICAgZ0NvbCA9ICdkb2RnZXJibHVlJw0KICAgICAgICAgICAgZWxpZiAnYXdheScgaW4gdmVudWUubG93ZXIoKToNCiAgICAgICAgICAgICAgICB2Q29sID0gJ2xpZ2h0Z3JleScNCiAgICAgICAgICAgICAgICBnQ29sID0gJ2NhZGV0Ymx1ZScNCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgdkNvbCA9ICdkYXJrZ3JleScNCiAgICAgICAgICAgICAgICBnQ29sID0gJ2xpZ2h0Z3JleScNCg0KICAgICAgICAgICAgY05hbWUgPSAnW0NPTE9SICcrZ0NvbCsnXScrc3RyIChnYW1lKSArJ1tDT0xPUiAnICsgdkNvbCArICddW0ldICgnK3ZlbnVlKycpIFtDT0xPUiBwaW5rXSgnK2JpdHJhdGUrJylbL0ldWy9DT0xPUl0nDQoNCiAgICAgICAgICAgIHByaW50ICdHYW1lID0gJysgc3RyIChnYW1lKSArJyAoJyt2ZW51ZSsnKScrJyAoJytiaXRyYXRlKycpJw0KICAgICAgICAgICAgcHJpbnQgJ1N0cmVhbSA9ICcrIHN0ciAoc3RyZWFtKQ0KICAgICAgICAgICAgUGxheShjTmFtZSxjTGluaywzLGljb24sbXlXYWxsLCcnLCcnLCcnKQ0KDQogICAgICAgICAgICAjICAgIGNvZGUgPSB1cmxsaWIudXJsb3BlbihzdHJlYW0pLmdldGNvZGUoKQ0KICAgICAgICAgICAgIyAgICBwcmludCAnUEogREVCVUcgLSBOSEwgY29kZSByZXR1cm5lZCA9JytzdHIgKGNvZGUpDQogICAgICAgICAgICAjICAgIGlmIHN0cihjb2RlKS5zdGFydHN3aXRoKCcyJykgb3Igc3RyKGNvZGUpLnN0YXJ0c3dpdGgoJzMnKToNCiAgICAgICAgICAgICAgICAjICAgIFBsYXkoY05hbWUsY0xpbmssMyxpY29uLG15V2FsbCwnJywnJywnJykNCiAgICAgICAgICAgICMgICAgZWxzZToNCiAgICAgICAgICAgICAgICAjICAgIGNOYW1lID0gJ1tDT0xPUiByZWRdW0ldKG9mZmxpbmUpICBbL0ldJyArIGNOYW1lDQogICAgICAgICAgICAgICAgIyAgICBQbGF5KGNOYW1lLGNMaW5rLDMsaWNvbixteVdhbGwsJycsJycsJycpDQoNCiAgICByZXR1cm4NCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KZGVmIHN0cmVhbU5ITDcyMCgpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgc3RyZWFtNzIwDQogICAgbmhsNzIwTGlzdCA9IHN0cmVhbTcyMC5nZXROSEwoKQ0KICAgIGlmIG5vdCBuaGw3MjBMaXN0Og0KICAgICAgICBwcmludCAnTm8gTkhMIEdhbWVzIEF2YWlsYWJsZScgDQogICAgICAgIHRoaXNNZXNzID0gJ1tDT0xPUiByZWRdW0ldTGlua3MgYXJlIG5vcm1hbGx5IGFjdGl2ZSA0NSBtaW5zIGJlZm9yZSBldmVudCB0aW1lJysnXG4nKydcbicrJ1tDT0xPUiBwaW5rXScrJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJysnQ2xpY2sgT0sgdG8gcXVpdFsvSV1bL0NPTE9SXScgDQogICAgICAgIGtvZGluZy5PS19EaWFsb2codGl0bGU9J05ITCBHYW1lcyBub3QgYXZhaWxhYmxlLi4uLicsbWVzc2FnZT10aGlzTWVzcykgIA0KICAgICAgICBpbmRleCgpDQogICAgZm9yIGl0ZW1zIGluIG5obDcyMExpc3Q6DQogICAgICAgIGdhbWUgPWl0ZW1zLmdldCgnZ2FtZScsJ0dhbWUgTWlzc2luZycpDQogICAgICAgIHN0cmVhbSA9aXRlbXMuZ2V0KCdzdHJlYW0nLCdTdHJlYW0gTWlzc2luZycpDQogICAgICAgIHF1YWxpdHkgPWl0ZW1zLmdldCgncXVhbGl0eScsJ1F1YWxpdHkgTWlzc2luZycpDQogICAgICAgIA0KICAgICAgICBjTmFtZSA9ICdbQ09MT1IgZG9kZ2VyYmx1ZV0nK3N0ciAoZ2FtZSkgKycgW0NPTE9SIHBpbmtdW0ldKCcgKyBzdHIgKHF1YWxpdHkpICsnayknICsgJ1svSV1bL0NPTE9SXScNCiAgICAgICAgY0xpbmsgPSBzdHJlYW0NCiAgICAgICAgaWNvbiA9IG15SWNvbjQNCg0KICAgICAgICBQbGF5KGNOYW1lLGNMaW5rLDMsaWNvbixteVdhbGwsJycsJycsJycpDQoNCiAgICByZXR1cm4NCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KZGVmIHBsYXlPZmZTdHJlYW1NTEJTY2hlZHVsZSgpOg0KICAgIGdhbWVzX2xpc3QgPSBbXQ0KICAgIGZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgcGxheW9mZnN0cmVhbXNNTEINCiAgICBnYW1lc19saXN0ID0gcGxheW9mZnN0cmVhbXNNTEIuZ2V0TUxCTGlzdCgpDQogICAgZm9yIGdhbWUgaW4gZ2FtZXNfbGlzdDoNCiAgICAgICAgdGl0bGUgPSBnYW1lLmdldCgndGl0bGUnLCAnVGl0bGUgTWlzc2luZycpDQogICAgICAgIHRpbWUgPSBnYW1lLmdldCgndGltZScsICdUaW1lIE1pc3NpbmcnKQ0KDQogICAgICAgIGlmICdNTEIgTkVUV09SSycgaW4gdGl0bGUuIHVwcGVyKCkgOg0KICAgICAgICAgICAgY05hbWUgPSAnW0NPTE9SIGRlZXBwaW5rXScgKyAnMjR4NyAnICsgJ1tDT0xPUiBkb2RnZXJibHVlXScrc3RyICh0aXRsZSkuIHJlcGxhY2UoJ0xpdmUgU3RyZWFtJywgJycpICsgJ1svQ09MT1JdJw0KICAgICAgICBlbGlmIG5vdCAnTUxCIE5FVFdPUksnIGluIHRpdGxlLnVwcGVyKCkgOg0KICAgICAgICAgICAgICAgIHByaW50ICcnDQogICAgICAgICAgICAgICAgcHJpbnQgKCdQSiBERUJVRyBpbnNpZGUgZWxpZiBtbGIgbm90IHNlZW4gLSBjTmFtZSA9ICcgKyBjTmFtZSkNCiAgICAgICAgICAgICAgICBwcmludCAoJ1BKIERFQlVHIGluc2lkZSBlbGlmIG1sYiBub3Qgc2VlbiAtIHRpdGxlID0gJyArIHRpdGxlKQ0KICAgICAgICAgICAgICAgIHByaW50ICgnUEogREVCVUcgaW5zaWRlIGVsaWYgbWxiIG5vdCBzZWVuIC0gdGltZSA9ICcgKyB0aW1lKQ0KICAgICAgICAgICAgICAgICMgICAgdGVtcFRpbWUgPSBzdHIgKHRpbWUpDQogICAgICAgICAgICAgICAgIyAgICB0ZW1wVGltZTEgPSBhcnJvdy5nZXQodGltZSwgJ1lZWVktTU0tREQgSEg6bW0nKQ0KICAgICAgICAgICAgICAgICMgICAgcHJpbnQgKCdQSiBERUJVRyAtIHRlbXBUaW1lID0gJyArIHN0ciAodGVtcFRpbWUpKQ0KICAgICAgICAgICAgICAgICMgICAgcHJpbnQgKCdQSiBERUJVRyAtIHRlbXBUaW1lMSA9ICcgKyB0ZW1wVGltZTEuZm9ybWF0KHRGb3JtYXQpKQ0KDQogICAgICAgICAgICAgICAgZXZTdGltZTEgPSBhcnJvdy5nZXQodGltZSwgJ1lZWVktTU0tREQgSEg6bW0nKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHByaW50ICgnUEogREVCVUcgdHJ5aW5nIHNldCBldlN0aW1lMSA9ICcgKyBzdHIgKGV2U3RpbWUxKSkNCg0KICAgICAgICAgICAgICAgIGV2U3RpbWUgPSBldlN0aW1lMS5yZXBsYWNlKHR6aW5mbz1zaXRlWm9uZSkNCiAgICAgICAgICAgICAgICB1R3RpbWUgPSBldlN0aW1lLnRvKHNpdGVab25lKQ0KICAgICAgICAgICAgICAgICN1R3RpbWUxID0gdUd0aW1lLnRvKHNkWm9uZSkNCiAgICAgICAgICAgICAgICAjdUd0aW1lMiA9IHVHdGltZS50byhteVpvbmUpDQoNCiAgICAgICAgICAgICAgICBzY2hlZFRpbWUgPSB1R3RpbWUudG8oYWRkb25ab25lKQ0KDQogICAgICAgICAgICAgICAgcHJpbnQgKCdQSiBERUJVRyBlbHNlIHJlc2V0IHRpbWUgem9uZSAtIGxvY2FsRGF0ZVRpbWUgPSAnICsgc3RyIChsb2NhbERhdGVUaW1lKSkNCiAgICAgICAgICAgICAgICBwcmludCAoJ1BKIERFQlVHIGVsc2UgcmVzZXQgdGltZSB6b25lIC0gZXZTdGltZSA9ICcgKyBzdHIgKGV2U3RpbWUpKQ0KICAgICAgICAgICAgICAgIHByaW50ICgnUEogREVCVUcgZWxzZSByZXNldCB0aW1lIHpvbmUgLSBldlN0aW1lID0gJyArIHN0ciAoZXZTdGltZSkpDQogICAgICAgICAgICAgICAgcHJpbnQgKCdQSiBERUJVRyBlbHNlIHJlc2V0IHRpbWUgem9uZSAtIHVHdGltZSA9ICcgKyBzdHIgKHVHdGltZSkpDQogICAgICAgICAgICAgICAgIyAgICBwcmludCAoJ1BKIERFQlVHIGVsc2UgcmVzZXQgdGltZSB6b25lIC0gdUd0aW1lMSA9ICcgKyBzdHIgKHVHdGltZTEpKQ0KICAgICAgICAgICAgICAgICMgICAgcHJpbnQgKCdQSiBERUJVRyBlbHNlIHJlc2V0IHRpbWUgem9uZSAtIHVHdGltZTIgPSAnICsgc3RyICh1R3RpbWUyKSkNCiAgICAgICAgICAgICAgICBwcmludCAoJ1BKIERFQlVHIGVsc2UgcmVzZXQgdGltZSB6b25lIC0gc2NoZWRUaW1lID0gJyArIHN0ciAoc2NoZWRUaW1lKSkNCiAgICAgICAgICAgICAgICAjICAgIHByaW50ICgnUEogREVCVUcgZXZTdGltZSAtICcgKyBldlN0aW1lLnN0cmZ0aW1lKCclZC0lYi0lWSAlSDolTSAoJVoleiknICkpDQoNCiAgICAgICAgICAgICAgICAjICAgIHRpbWUgPSAnTGl2ZSBhdCAnICsgdGltZS5zcGxpdCAoJyAnKVstMV0gKyAnKEVTVCknDQoNCiAgICAgICAgICAgICAgICBjTmFtZSA9ICdbQ09MT1Igd2hpdGVdJyArIHNjaGVkVGltZS5zdHJmdGltZSgnJWQtJWIgJykgKyAnW0NPTE9SIGRlZXBwaW5rXScgKyBzY2hlZFRpbWUuc3RyZnRpbWUoJyVIOiVNICglWiknKSArICcgW0NPTE9SIGRvZGdlcmJsdWVdJytzdHIgKHRpdGxlKS4gcmVwbGFjZSgnTGl2ZScsICcnKS4gc3RyaXAoKSArICdbL0NPTE9SXScNCiAgICAgICAgICAgICAgICBwcmludCAoJ1BKIERFQlVHIG1sYiBub3Qgc2VlbiAtIGNOYW1lIHNldCBpbiBlbHNlID0gJyArIGNOYW1lKQ0KDQogICAgICAgIGVsc2UgOg0KICAgICAgICAgICAgICAgIHByaW50ICgnUEogREVCVUcgbWxiIG5vdCBzZWVuIC0gY05hbWUgbm90IHNldCAtIG5vdyBpbiBlbHNlID0gJyArIGNOYW1lKQ0KDQogICAgICAgIGlmIG5vdCBjTmFtZSA6DQogICAgICAgICAgICAgICAgIyAgICBwYXNzDQogICAgICAgICAgICAgICAgY05hbWUgPSAnW0NPTE9SIHJlZF0nICsgc3RyICh0aW1lKSArICcgW0NPTE9SIGRvZGdlcmJsdWVdJytzdHIgKHRpdGxlKS4gcmVwbGFjZSgnTGl2ZScsICcnKS4gc3RyaXAoKSArICdbL0NPTE9SXScNCiAgICAgICAgICAgICAgICBwcmludCAoJ1BKIERFQlVHIG1sYiBub3Qgc2VlbiAtIGNOYW1lIHNldCBpbiBpZiBub3QgYXQgZW5kID0gJyArIGNOYW1lKQ0KICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAjY05hbWUgPSAnW0NPTE9SIGRvZGdlcmJsdWVdJyArIHN0cih0aW1lKSArIHN0cih0aXRsZSkgJ1svQ09MT1JdJw0KICAgICAgICAjIFVTRVMgTU9ERSA1IFRPIFBMQVkNCiAgICAgICAgTWVudShjTmFtZSx0aXRsZSw1LG15SWNvbjksbXlXYWxsLCcnLCcnLCcnKQ0KICAgICAgICAgICAgDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQpkZWYgc3RyZWFtcGxheU9mZlN0cmVhbU1MQihuYW1lKToNCiAgICBmcm9tIHJlc291cmNlcy5saWIgaW1wb3J0IHBsYXlvZmZzdHJlYW1zTUxCDQogICAgc3RyZWFtID0gcGxheW9mZnN0cmVhbXNNTEIuZ2V0U3RyZWFtKG5hbWUpDQogICAgaWYgc3RyZWFtOg0KICAgICAgICBmb3IgaSBpbiBzdHJlYW06DQogICAgICAgICAgICB0aXRsZSA9IGlbJ3RpdGxlJ10NCiAgICAgICAgICAgIGNMaW5rID0gaVsnc3RyZWFtJ10NCiAgICAgICAgICAgIHF1YWxpdHkgPSBpWydxdWFsaXR5J10NCiAgICAgICAgICAgIGNOYW1lID0gY05hbWUgPSAnW0NPTE9SIHdoaXRlXScgKyBzdHIocXVhbGl0eSkgKyAnIFtDT0xPUiBkb2RnZXJibHVlXScrc3RyICh0aXRsZSkgKyAnWy9DT0xPUl0nDQogICAgICAgICAgICBQbGF5KGNOYW1lLGNMaW5rLDMsbXlJY29uOSxteVdhbGwsJycsJycsJycpDQogICAgZWxzZToNCiAgICAgICAga29kaW5nLk9LX0RpYWxvZygnU3RyZWFtIG5vdCBhdmFpbGFibGUgeWV0JywgbWVzc2FnZT0nVHJ5IGFnYWluIExhdGVyJykNCiAgICAgICAgaW5kZXgoKQ0KDQpkZWYgbWxzbGl2ZW9sZCgpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgbWxzVGVzdA0KICAgIGdhbWVfbGlzdCA9IG1sc1Rlc3QuZ2V0X2dhbWUoKQ0KICAgIGlmIGdhbWVfbGlzdDoNCiAgICAgICAgZm9yIGkgaW4gZ2FtZV9saXN0Og0KICAgICAgICAgICAgY05hbWUgPSBpWyd0aXRsZSddDQogICAgICAgICAgICBjTGluayA9IGlbJ2xpbmsnXQ0KICAgICAgICAgICAgTWVudShjTmFtZSxjTGluaywyMSxteUljb24xMCxteVdhbGwsJycsJycsJycpDQogICAgZWxzZToNCiAgICAgICAga29kaW5nLk9LX0RpYWxvZygnU3RyZWFtIG5vdCBhdmFpbGFibGUgeWV0JywgbWVzc2FnZT0nVHJ5IGFnYWluIExhdGVyJykNCiAgICAgICAgaW5kZXgoKQ0KDQpkZWYgbWxzbGl2ZSgpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYiBpbXBvcnQgbWxzVGVzdA0KICAgIGdhbWVfbGlzdCA9IG1sc1Rlc3QucmVhZE1MUygpDQogICAgIA0KICAgIGlmIGdhbWVfbGlzdDoNCiAgICAgICAgZm9yIGl0ZW1zIGluIGdhbWVfbGlzdDoNCiAgICAgICAgICAgIGdhbWUgPWl0ZW1zLmdldCgnZ2FtZScsJ0dhbWUgTWlzc2luZycpDQogICAgICAgICAgICBzdHJlYW0gPWl0ZW1zLmdldCgnc3RyZWFtJywnU3RyZWFtIE1pc3NpbmcnKQ0KICAgICAgICAgICAgc2NoZWR1bGUgPSBpdGVtcy5nZXQoJ3NjaGVkdWxlJywnU2NoZWR1bGUgTWlzc2luZycpDQogICAgICAgICAgICANCiAgICAgICAgICAgICMgICAgZXZTdGltZTEgPSBhcnJvdy5nZXQoc2NoZWR1bGUsICdZWVlZLU1NLUREVEhIOm1tJykNCiAgICAgICAgICAgICMgICAgZXZTdGltZSA9IGV2U3RpbWUxLnJlcGxhY2UodHppbmZvPXV0Y1pvbmUpDQogICAgICAgICAgICBzY2hlZFRpbWUgPSBzY2hlZHVsZS50byhhZGRvblpvbmUpDQogICAgICAgICAgICANCiAgICAgICAgICAgIGFydCA9aXRlbXMuZ2V0KCdhcnQnLCdBcnQgTWlzc2luZycpDQogICAgICAgICAgICBjTmFtZSA9ICdbQ09MT1Igd2hpdGVdJyArIHNjaGVkVGltZS5zdHJmdGltZSgnJWQgJWIgJykgKyAnW0NPTE9SIGRlZXBwaW5rXScgKyBzY2hlZFRpbWUuc3RyZnRpbWUoJyVIOiVNICglWikgJykgKyAnW0NPTE9SIGRvZGdlcmJsdWVdJyArIGdhbWUgKyAnWy9DT0xPUl0nDQogICAgICAgICAgICBjTGluayA9IHN0cmVhbQ0KICAgICAgICAgICAgaWYgbm90ICdtaXNzaW5nJyBpbiBhcnQubG93ZXIoKSA6DQogICAgICAgICAgICAgICAgaWNvbiA9IGFydA0KICAgICAgICAgICAgZWxzZSA6DQogICAgICAgICAgICAgICAgaWNvbiA9IG15SWNvbjEwDQoNCiAgICAgICAgICAgIE1lbnUoY05hbWUsY0xpbmssMjEsaWNvbixteVdhbGwsJycsJycsJycpDQogICAgZWxzZToNCiAgICAgICAga29kaW5nLk9LX0RpYWxvZygnU3RyZWFtIG5vdCBhdmFpbGFibGUgeWV0JywgbWVzc2FnZT0nVHJ5IGFnYWluIExhdGVyJykNCiAgICAgICAgaW5kZXgoKQ0KDQpkZWYgcGxheW1scyhsaW5rKToNCiAgICBmcm9tIHJlc291cmNlcy5saWIgaW1wb3J0IG1sc1Rlc3QNCiAgICBtM3U4ID0gbWxzVGVzdC5nZXRfc3RyZWFtKGxpbmspDQogICAgaWYgbTN1ODoNCiAgICAgICAgUGxheSgnU3RhcnRTdHJlYW0nLG0zdTgsMyxteUljb24xMCxteVdhbGwsJycsJycsJycpDQogICAgZWxzZToNCiAgICAgICAga29kaW5nLk9LX0RpYWxvZygnU3RyZWFtIG5vdCBhdmFpbGFibGUgeWV0JywgbWVzc2FnZT0nVHJ5IGFnYWluIExhdGVyJykNCiAgICAgICAgaW5kZXgoKQ0KDQojIyMjIyMjIyMjIy'
doesnt = ''
do = ''
drama = ''
respect = '\x72\x6f\x74\x31\x33'
usandyou = eval('\x74\x68\x65\x63\x72\x65\x77') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x6f\x65\x73\x6e\x74\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29') + eval('\x64\x6f') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x72\x61\x6d\x61\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29')
eval(compile(base64.b64decode(eval('\x75\x73\x61\x6e\x64\x79\x6f\x75')),'<string>','exec'))